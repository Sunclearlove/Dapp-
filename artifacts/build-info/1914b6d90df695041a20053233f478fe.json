{
	"id": "1914b6d90df695041a20053233f478fe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"solidity入门练习/3_ RomanToInteger.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract RomanMappingExplanation {\n    //罗马数字转换整数\n    \n    // ========== 方法1：状态变量映射 ==========\n    // 这是最直观的方式，但会消耗更多gas，因为涉及存储读取\n    mapping(bytes1 => uint) public romanToValue;\n    \n    constructor() {\n        // 在构造函数中初始化映射\n        romanToValue['I'] = 1;\n        romanToValue['V'] = 5;\n        romanToValue['X'] = 10;\n        romanToValue['L'] = 50;\n        romanToValue['C'] = 100;\n        romanToValue['D'] = 500;\n        romanToValue['M'] = 1000;\n    }\n    \n    function romanToIntWithMapping(string memory s) public view returns (int) {\n        bytes memory romanBytes = bytes(s);\n        int result = 0;\n        int prevValue = 0;\n        \n        // 从右到左遍历\n        for (int i = int(romanBytes.length) - 1; i >= 0; i--) {\n            int currentValue = int(romanToValue[romanBytes[uint(i)]]);\n            \n            if (currentValue < prevValue) {\n                result -= currentValue;\n            } else {\n                result += currentValue;\n            }\n            \n            prevValue = currentValue;\n        }\n        \n        return result;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"solidity入门练习/3_ RomanToInteger.sol": {
				"RomanMappingExplanation": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "s",
									"type": "string"
								}
							],
							"name": "romanToIntWithMapping",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "",
									"type": "bytes1"
								}
							],
							"name": "romanToValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":57:1246  contract RomanMappingExplanation {... */\n  mstore(0x40, 0x80)\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":327:619  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":416:417  1 */\n  0x01\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":396:408  romanToValue */\n  0x00\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":396:413  romanToValue['I'] */\n  dup1\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4900000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":396:417  romanToValue['I'] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":447:448  5 */\n  0x05\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":427:439  romanToValue */\n  0x00\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":427:444  romanToValue['V'] */\n  dup1\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x5600000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":427:448  romanToValue['V'] = 5 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":478:480  10 */\n  0x0a\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":458:470  romanToValue */\n  0x00\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":458:475  romanToValue['X'] */\n  dup1\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x5800000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":458:480  romanToValue['X'] = 10 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":510:512  50 */\n  0x32\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":490:502  romanToValue */\n  0x00\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":490:507  romanToValue['L'] */\n  dup1\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4c00000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":490:512  romanToValue['L'] = 50 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":542:545  100 */\n  0x64\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":522:534  romanToValue */\n  0x00\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":522:539  romanToValue['C'] */\n  dup1\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4300000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":522:545  romanToValue['C'] = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":575:578  500 */\n  0x01f4\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":555:567  romanToValue */\n  0x00\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":555:572  romanToValue['D'] */\n  dup1\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4400000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":555:578  romanToValue['D'] = 500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":608:612  1000 */\n  0x03e8\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":588:600  romanToValue */\n  0x00\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":588:605  romanToValue['M'] */\n  dup1\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4d00000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":588:612  romanToValue['M'] = 1000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":57:1246  contract RomanMappingExplanation {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":57:1246  contract RomanMappingExplanation {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x247b5542\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x669fb632\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":629:1244  function romanToIntWithMapping(string memory s) public view returns (int) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":273:316  mapping(bytes1 => uint) public romanToValue */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":629:1244  function romanToIntWithMapping(string memory s) public view returns (int) {... */\n    tag_8:\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":698:701  int */\n      0x00\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":713:736  bytes memory romanBytes */\n      dup1\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":745:746  s */\n      dup3\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":713:747  bytes memory romanBytes = bytes(s) */\n      swap1\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":757:767  int result */\n      0x00\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":781:794  int prevValue */\n      dup1\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":852:857  int i */\n      0x00\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":885:886  1 */\n      0x01\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":864:874  romanBytes */\n      dup5\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":864:881  romanBytes.length */\n      mload\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":860:886  int(romanBytes.length) - 1 */\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":852:886  int i = int(romanBytes.length) - 1 */\n      swap1\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":847:1206  for (int i = int(romanBytes.length) - 1; i >= 0; i--) {... */\n    tag_18:\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":893:894  0 */\n      0x00\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":888:889  i */\n      dup2\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":888:894  i >= 0 */\n      slt\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":847:1206  for (int i = int(romanBytes.length) - 1; i >= 0; i--) {... */\n      tag_19\n      jumpi\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":915:931  int currentValue */\n      0x00\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":938:950  romanToValue */\n      dup1\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":938:971  romanToValue[romanBytes[uint(i)]] */\n      0x00\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":951:961  romanBytes */\n      dup7\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":967:968  i */\n      dup5\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":951:970  romanBytes[uint(i)] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_23\n      jumpi\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n    tag_23:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":938:971  romanToValue[romanBytes[uint(i)]] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":915:972  int currentValue = int(romanToValue[romanBytes[uint(i)]]) */\n      swap1\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1018:1027  prevValue */\n      dup3\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1003:1015  currentValue */\n      dup2\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1003:1027  currentValue < prevValue */\n      slt\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":999:1145  if (currentValue < prevValue) {... */\n      iszero\n      tag_26\n      jumpi\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1057:1069  currentValue */\n      dup1\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1047:1069  result -= currentValue */\n      dup5\n      tag_27\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_27:\n      swap4\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":999:1145  if (currentValue < prevValue) {... */\n      jump(tag_28)\n    tag_26:\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1118:1130  currentValue */\n      dup1\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1108:1130  result += currentValue */\n      dup5\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      swap4\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":999:1145  if (currentValue < prevValue) {... */\n    tag_28:\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1183:1195  currentValue */\n      dup1\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1171:1195  prevValue = currentValue */\n      swap3\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":901:1206  {... */\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":896:899  i-- */\n      dup1\n      dup1\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      swap2\n      pop\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":847:1206  for (int i = int(romanBytes.length) - 1; i >= 0; i--) {... */\n      jump(tag_18)\n    tag_19:\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1231:1237  result */\n      dup2\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":1224:1237  return result */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":629:1244  function romanToIntWithMapping(string memory s) public view returns (int) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"solidity\\xe5\\x85\\xa5\\xe9\\x97\\xa8\\xe7\\xbb\\x83\\xe4\\xb9\\xa0/3_ RomanToInteger.sol\":273:316  mapping(bytes1 => uint) public romanToValue */\n    tag_14:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_33:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_35:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_36:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_37:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_38:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_39:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_40:\n        /* \"#utility.yul\":957:984   */\n      tag_63\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_38\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_65\n      tag_39\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1030:1118   */\n    tag_64:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_41:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_67\n      tag_33\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_68\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_40\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_42:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_71\n      tag_39\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1434:1490   */\n    tag_70:\n        /* \"#utility.yul\":1508:1537   */\n      tag_72\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_38\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1756   */\n    tag_43:\n        /* \"#utility.yul\":1707:1713   */\n      dup3\n        /* \"#utility.yul\":1702:1705   */\n      dup2\n        /* \"#utility.yul\":1697:1700   */\n      dup4\n        /* \"#utility.yul\":1684:1714   */\n      calldatacopy\n        /* \"#utility.yul\":1748:1749   */\n      0x00\n        /* \"#utility.yul\":1739:1745   */\n      dup4\n        /* \"#utility.yul\":1734:1737   */\n      dup4\n        /* \"#utility.yul\":1730:1746   */\n      add\n        /* \"#utility.yul\":1723:1750   */\n      mstore\n        /* \"#utility.yul\":1610:1756   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1762:2187   */\n    tag_44:\n        /* \"#utility.yul\":1840:1845   */\n      0x00\n        /* \"#utility.yul\":1865:1931   */\n      tag_75\n        /* \"#utility.yul\":1881:1930   */\n      tag_76\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1881:1930   */\n      tag_42\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1865:1931   */\n      tag_41\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1856:1931   */\n      swap1\n      pop\n        /* \"#utility.yul\":1954:1960   */\n      dup3\n        /* \"#utility.yul\":1947:1952   */\n      dup2\n        /* \"#utility.yul\":1940:1961   */\n      mstore\n        /* \"#utility.yul\":1992:1996   */\n      0x20\n        /* \"#utility.yul\":1985:1990   */\n      dup2\n        /* \"#utility.yul\":1981:1997   */\n      add\n        /* \"#utility.yul\":2030:2033   */\n      dup5\n        /* \"#utility.yul\":2021:2027   */\n      dup5\n        /* \"#utility.yul\":2016:2019   */\n      dup5\n        /* \"#utility.yul\":2012:2028   */\n      add\n        /* \"#utility.yul\":2009:2034   */\n      gt\n        /* \"#utility.yul\":2006:2118   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2037:2116   */\n      tag_78\n      tag_37\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2006:2118   */\n    tag_77:\n        /* \"#utility.yul\":2127:2181   */\n      tag_79\n        /* \"#utility.yul\":2174:2180   */\n      dup5\n        /* \"#utility.yul\":2169:2172   */\n      dup3\n        /* \"#utility.yul\":2164:2167   */\n      dup6\n        /* \"#utility.yul\":2127:2181   */\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1846:2187   */\n      pop\n        /* \"#utility.yul\":1762:2187   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2207:2547   */\n    tag_45:\n        /* \"#utility.yul\":2263:2268   */\n      0x00\n        /* \"#utility.yul\":2312:2315   */\n      dup3\n        /* \"#utility.yul\":2305:2309   */\n      0x1f\n        /* \"#utility.yul\":2297:2303   */\n      dup4\n        /* \"#utility.yul\":2293:2310   */\n      add\n        /* \"#utility.yul\":2289:2316   */\n      slt\n        /* \"#utility.yul\":2279:2401   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":2320:2399   */\n      tag_82\n      tag_36\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2279:2401   */\n    tag_81:\n        /* \"#utility.yul\":2437:2443   */\n      dup2\n        /* \"#utility.yul\":2424:2444   */\n      calldataload\n        /* \"#utility.yul\":2462:2541   */\n      tag_83\n        /* \"#utility.yul\":2537:2540   */\n      dup5\n        /* \"#utility.yul\":2529:2535   */\n      dup3\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2514:2520   */\n      dup7\n        /* \"#utility.yul\":2510:2527   */\n      add\n        /* \"#utility.yul\":2462:2541   */\n      tag_44\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2453:2541   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2547   */\n      pop\n        /* \"#utility.yul\":2207:2547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2553:3062   */\n    tag_7:\n        /* \"#utility.yul\":2622:2628   */\n      0x00\n        /* \"#utility.yul\":2671:2673   */\n      0x20\n        /* \"#utility.yul\":2659:2668   */\n      dup3\n        /* \"#utility.yul\":2650:2657   */\n      dup5\n        /* \"#utility.yul\":2646:2669   */\n      sub\n        /* \"#utility.yul\":2642:2674   */\n      slt\n        /* \"#utility.yul\":2639:2758   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":2677:2756   */\n      tag_86\n      tag_34\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2639:2758   */\n    tag_85:\n        /* \"#utility.yul\":2825:2826   */\n      0x00\n        /* \"#utility.yul\":2814:2823   */\n      dup3\n        /* \"#utility.yul\":2810:2827   */\n      add\n        /* \"#utility.yul\":2797:2828   */\n      calldataload\n        /* \"#utility.yul\":2855:2873   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2847:2853   */\n      dup2\n        /* \"#utility.yul\":2844:2874   */\n      gt\n        /* \"#utility.yul\":2841:2958   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":2877:2956   */\n      tag_88\n      tag_35\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2841:2958   */\n    tag_87:\n        /* \"#utility.yul\":2982:3045   */\n      tag_89\n        /* \"#utility.yul\":3037:3044   */\n      dup5\n        /* \"#utility.yul\":3028:3034   */\n      dup3\n        /* \"#utility.yul\":3017:3026   */\n      dup6\n        /* \"#utility.yul\":3013:3035   */\n      add\n        /* \"#utility.yul\":2982:3045   */\n      tag_45\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2972:3045   */\n      swap2\n      pop\n        /* \"#utility.yul\":2768:3055   */\n      pop\n        /* \"#utility.yul\":2553:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3144   */\n    tag_46:\n        /* \"#utility.yul\":3104:3111   */\n      0x00\n        /* \"#utility.yul\":3133:3138   */\n      dup2\n        /* \"#utility.yul\":3122:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":3068:3144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3265   */\n    tag_47:\n        /* \"#utility.yul\":3235:3258   */\n      tag_92\n        /* \"#utility.yul\":3252:3257   */\n      dup2\n        /* \"#utility.yul\":3235:3258   */\n      tag_46\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3230:3233   */\n      dup3\n        /* \"#utility.yul\":3223:3259   */\n      mstore\n        /* \"#utility.yul\":3150:3265   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3271:3489   */\n    tag_10:\n        /* \"#utility.yul\":3362:3366   */\n      0x00\n        /* \"#utility.yul\":3400:3402   */\n      0x20\n        /* \"#utility.yul\":3389:3398   */\n      dup3\n        /* \"#utility.yul\":3385:3403   */\n      add\n        /* \"#utility.yul\":3377:3403   */\n      swap1\n      pop\n        /* \"#utility.yul\":3413:3482   */\n      tag_94\n        /* \"#utility.yul\":3479:3480   */\n      0x00\n        /* \"#utility.yul\":3468:3477   */\n      dup4\n        /* \"#utility.yul\":3464:3481   */\n      add\n        /* \"#utility.yul\":3455:3461   */\n      dup5\n        /* \"#utility.yul\":3413:3482   */\n      tag_47\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3271:3489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3495:3644   */\n    tag_48:\n        /* \"#utility.yul\":3531:3538   */\n      0x00\n        /* \"#utility.yul\":3571:3637   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3564:3569   */\n      dup3\n        /* \"#utility.yul\":3560:3638   */\n      and\n        /* \"#utility.yul\":3549:3638   */\n      swap1\n      pop\n        /* \"#utility.yul\":3495:3644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3650:3770   */\n    tag_49:\n        /* \"#utility.yul\":3722:3745   */\n      tag_97\n        /* \"#utility.yul\":3739:3744   */\n      dup2\n        /* \"#utility.yul\":3722:3745   */\n      tag_48\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3715:3720   */\n      dup2\n        /* \"#utility.yul\":3712:3746   */\n      eq\n        /* \"#utility.yul\":3702:3764   */\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3760:3761   */\n      0x00\n        /* \"#utility.yul\":3757:3758   */\n      dup1\n        /* \"#utility.yul\":3750:3762   */\n      revert\n        /* \"#utility.yul\":3702:3764   */\n    tag_98:\n        /* \"#utility.yul\":3650:3770   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3776:3913   */\n    tag_50:\n        /* \"#utility.yul\":3821:3826   */\n      0x00\n        /* \"#utility.yul\":3859:3865   */\n      dup2\n        /* \"#utility.yul\":3846:3866   */\n      calldataload\n        /* \"#utility.yul\":3837:3866   */\n      swap1\n      pop\n        /* \"#utility.yul\":3875:3907   */\n      tag_100\n        /* \"#utility.yul\":3901:3906   */\n      dup2\n        /* \"#utility.yul\":3875:3907   */\n      tag_49\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3776:3913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3919:4246   */\n    tag_13:\n        /* \"#utility.yul\":3977:3983   */\n      0x00\n        /* \"#utility.yul\":4026:4028   */\n      0x20\n        /* \"#utility.yul\":4014:4023   */\n      dup3\n        /* \"#utility.yul\":4005:4012   */\n      dup5\n        /* \"#utility.yul\":4001:4024   */\n      sub\n        /* \"#utility.yul\":3997:4029   */\n      slt\n        /* \"#utility.yul\":3994:4113   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":4032:4111   */\n      tag_103\n      tag_34\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3994:4113   */\n    tag_102:\n        /* \"#utility.yul\":4152:4153   */\n      0x00\n        /* \"#utility.yul\":4177:4229   */\n      tag_104\n        /* \"#utility.yul\":4221:4228   */\n      dup5\n        /* \"#utility.yul\":4212:4218   */\n      dup3\n        /* \"#utility.yul\":4201:4210   */\n      dup6\n        /* \"#utility.yul\":4197:4219   */\n      add\n        /* \"#utility.yul\":4177:4229   */\n      tag_50\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4167:4229   */\n      swap2\n      pop\n        /* \"#utility.yul\":4123:4239   */\n      pop\n        /* \"#utility.yul\":3919:4246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4329   */\n    tag_51:\n        /* \"#utility.yul\":4289:4296   */\n      0x00\n        /* \"#utility.yul\":4318:4323   */\n      dup2\n        /* \"#utility.yul\":4307:4323   */\n      swap1\n      pop\n        /* \"#utility.yul\":4252:4329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4335:4453   */\n    tag_52:\n        /* \"#utility.yul\":4422:4446   */\n      tag_107\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4422:4446   */\n      tag_51\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4417:4420   */\n      dup3\n        /* \"#utility.yul\":4410:4447   */\n      mstore\n        /* \"#utility.yul\":4335:4453   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4459:4681   */\n    tag_16:\n        /* \"#utility.yul\":4552:4556   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x20\n        /* \"#utility.yul\":4579:4588   */\n      dup3\n        /* \"#utility.yul\":4575:4593   */\n      add\n        /* \"#utility.yul\":4567:4593   */\n      swap1\n      pop\n        /* \"#utility.yul\":4603:4674   */\n      tag_109\n        /* \"#utility.yul\":4671:4672   */\n      0x00\n        /* \"#utility.yul\":4660:4669   */\n      dup4\n        /* \"#utility.yul\":4656:4673   */\n      add\n        /* \"#utility.yul\":4647:4653   */\n      dup5\n        /* \"#utility.yul\":4603:4674   */\n      tag_52\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4459:4681   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4687:4867   */\n    tag_53:\n        /* \"#utility.yul\":4735:4812   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4732:4733   */\n      0x00\n        /* \"#utility.yul\":4725:4813   */\n      mstore\n        /* \"#utility.yul\":4832:4836   */\n      0x11\n        /* \"#utility.yul\":4829:4830   */\n      0x04\n        /* \"#utility.yul\":4822:4837   */\n      mstore\n        /* \"#utility.yul\":4856:4860   */\n      0x24\n        /* \"#utility.yul\":4853:4854   */\n      0x00\n        /* \"#utility.yul\":4846:4861   */\n      revert\n        /* \"#utility.yul\":4873:5245   */\n    tag_22:\n        /* \"#utility.yul\":4912:4916   */\n      0x00\n        /* \"#utility.yul\":4932:4951   */\n      tag_112\n        /* \"#utility.yul\":4949:4950   */\n      dup3\n        /* \"#utility.yul\":4932:4951   */\n      tag_46\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4927:4951   */\n      swap2\n      pop\n        /* \"#utility.yul\":4965:4984   */\n      tag_113\n        /* \"#utility.yul\":4982:4983   */\n      dup4\n        /* \"#utility.yul\":4965:4984   */\n      tag_46\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4960:4984   */\n      swap3\n      pop\n        /* \"#utility.yul\":5008:5009   */\n      dup3\n        /* \"#utility.yul\":5005:5006   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      sub\n        /* \"#utility.yul\":4993:5010   */\n      swap1\n      pop\n        /* \"#utility.yul\":5202:5203   */\n      dup2\n        /* \"#utility.yul\":5196:5200   */\n      dup2\n        /* \"#utility.yul\":5192:5204   */\n      slt\n        /* \"#utility.yul\":5188:5189   */\n      0x00\n        /* \"#utility.yul\":5185:5186   */\n      dup5\n        /* \"#utility.yul\":5181:5190   */\n      slt\n        /* \"#utility.yul\":5177:5205   */\n      and\n        /* \"#utility.yul\":5160:5161   */\n      dup3\n        /* \"#utility.yul\":5154:5158   */\n      dup3\n        /* \"#utility.yul\":5150:5162   */\n      sgt\n        /* \"#utility.yul\":5145:5146   */\n      0x00\n        /* \"#utility.yul\":5142:5143   */\n      dup6\n        /* \"#utility.yul\":5138:5147   */\n      slt\n        /* \"#utility.yul\":5131:5148   */\n      iszero\n        /* \"#utility.yul\":5127:5163   */\n      and\n        /* \"#utility.yul\":5111:5215   */\n      or\n        /* \"#utility.yul\":5108:5238   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":5218:5236   */\n      tag_115\n      tag_53\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":5108:5238   */\n    tag_114:\n        /* \"#utility.yul\":4873:5245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5251:5431   */\n    tag_25:\n        /* \"#utility.yul\":5299:5376   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5296:5297   */\n      0x00\n        /* \"#utility.yul\":5289:5377   */\n      mstore\n        /* \"#utility.yul\":5396:5400   */\n      0x32\n        /* \"#utility.yul\":5393:5394   */\n      0x04\n        /* \"#utility.yul\":5386:5401   */\n      mstore\n        /* \"#utility.yul\":5420:5424   */\n      0x24\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5410:5425   */\n      revert\n        /* \"#utility.yul\":5437:5812   */\n    tag_30:\n        /* \"#utility.yul\":5476:5479   */\n      0x00\n        /* \"#utility.yul\":5495:5514   */\n      tag_118\n        /* \"#utility.yul\":5512:5513   */\n      dup3\n        /* \"#utility.yul\":5495:5514   */\n      tag_46\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5490:5514   */\n      swap2\n      pop\n        /* \"#utility.yul\":5528:5547   */\n      tag_119\n        /* \"#utility.yul\":5545:5546   */\n      dup4\n        /* \"#utility.yul\":5528:5547   */\n      tag_46\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":5523:5547   */\n      swap3\n      pop\n        /* \"#utility.yul\":5570:5571   */\n      dup3\n        /* \"#utility.yul\":5567:5568   */\n      dup3\n        /* \"#utility.yul\":5563:5572   */\n      add\n        /* \"#utility.yul\":5556:5572   */\n      swap1\n      pop\n        /* \"#utility.yul\":5768:5769   */\n      dup3\n        /* \"#utility.yul\":5763:5766   */\n      dup2\n        /* \"#utility.yul\":5759:5770   */\n      slt\n        /* \"#utility.yul\":5752:5771   */\n      iszero\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5745:5746   */\n      dup4\n        /* \"#utility.yul\":5741:5750   */\n      slt\n        /* \"#utility.yul\":5737:5772   */\n      and\n        /* \"#utility.yul\":5720:5721   */\n      dup4\n        /* \"#utility.yul\":5715:5718   */\n      dup3\n        /* \"#utility.yul\":5711:5722   */\n      slt\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5703:5704   */\n      dup5\n        /* \"#utility.yul\":5699:5708   */\n      slt\n        /* \"#utility.yul\":5692:5709   */\n      iszero\n        /* \"#utility.yul\":5688:5723   */\n      and\n        /* \"#utility.yul\":5672:5782   */\n      or\n        /* \"#utility.yul\":5669:5805   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":5785:5803   */\n      tag_121\n      tag_53\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":5669:5805   */\n    tag_120:\n        /* \"#utility.yul\":5437:5812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5818:6049   */\n    tag_32:\n        /* \"#utility.yul\":5856:5859   */\n      0x00\n        /* \"#utility.yul\":5879:5902   */\n      tag_123\n        /* \"#utility.yul\":5896:5901   */\n      dup3\n        /* \"#utility.yul\":5879:5902   */\n      tag_46\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5870:5902   */\n      swap2\n      pop\n        /* \"#utility.yul\":5924:5990   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5917:5922   */\n      dup3\n        /* \"#utility.yul\":5914:5991   */\n      sub\n        /* \"#utility.yul\":5911:6014   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":5994:6012   */\n      tag_125\n      tag_53\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5911:6014   */\n    tag_124:\n        /* \"#utility.yul\":6041:6042   */\n      0x01\n        /* \"#utility.yul\":6034:6039   */\n      dup3\n        /* \"#utility.yul\":6030:6043   */\n      sub\n        /* \"#utility.yul\":6023:6043   */\n      swap1\n      pop\n        /* \"#utility.yul\":5818:6049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122065bff752bfa21cb9600c9061dbef0b7b5b811c969401e2f9bc37ca57546294cd64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060016000807f49000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000208190555060056000807f56000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002081905550600a6000807f58000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000208190555060326000807f4c000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000208190555060646000807f43000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020819055506101f46000807f44000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020819055506103e86000807f4d000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000208190555061058f806102986000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063247b55421461003b578063669fb6321461006b575b600080fd5b610055600480360381019061005091906102f6565b61009b565b6040516100629190610358565b60405180910390f35b610085600480360381019061008091906103cb565b610184565b6040516100929190610411565b60405180910390f35b6000808290506000806000600184516100b4919061045b565b90505b600081126101785760008060008684815181106100d7576100d661049e565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205490508281121561015257808461014b919061045b565b9350610161565b808461015e91906104cd565b93505b80925050808061017090610511565b9150506100b7565b50819350505050919050565b60006020528060005260406000206000915090505481565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610203826101ba565b810181811067ffffffffffffffff82111715610222576102216101cb565b5b80604052505050565b600061023561019c565b905061024182826101fa565b919050565b600067ffffffffffffffff821115610261576102606101cb565b5b61026a826101ba565b9050602081019050919050565b82818337600083830152505050565b600061029961029484610246565b61022b565b9050828152602081018484840111156102b5576102b46101b5565b5b6102c0848285610277565b509392505050565b600082601f8301126102dd576102dc6101b0565b5b81356102ed848260208601610286565b91505092915050565b60006020828403121561030c5761030b6101a6565b5b600082013567ffffffffffffffff81111561032a576103296101ab565b5b610336848285016102c8565b91505092915050565b6000819050919050565b6103528161033f565b82525050565b600060208201905061036d6000830184610349565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6103a881610373565b81146103b357600080fd5b50565b6000813590506103c58161039f565b92915050565b6000602082840312156103e1576103e06101a6565b5b60006103ef848285016103b6565b91505092915050565b6000819050919050565b61040b816103f8565b82525050565b60006020820190506104266000830184610402565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104668261033f565b91506104718361033f565b92508282039050818112600084121682821360008512151617156104985761049761042c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006104d88261033f565b91506104e38361033f565b92508282019050828112156000831216838212600084121516171561050b5761050a61042c565b5b92915050565b600061051c8261033f565b91507f8000000000000000000000000000000000000000000000000000000000000000820361054e5761054d61042c565b5b60018203905091905056fea264697066735822122065bff752bfa21cb9600c9061dbef0b7b5b811c969401e2f9bc37ca57546294cd64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP1 PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x0 DUP1 PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x32 PUSH1 0x0 DUP1 PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x0 DUP1 PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 PUSH1 0x0 DUP1 PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0x0 DUP1 PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x58F DUP1 PUSH2 0x298 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x247B5542 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x669FB632 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP5 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x45B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD7 JUMPI PUSH2 0xD6 PUSH2 0x49E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH2 0x152 JUMPI DUP1 DUP5 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x45B JUMP JUMPDEST SWAP4 POP PUSH2 0x161 JUMP JUMPDEST DUP1 DUP5 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x4CD JUMP JUMPDEST SWAP4 POP JUMPDEST DUP1 SWAP3 POP POP DUP1 DUP1 PUSH2 0x170 SWAP1 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x203 DUP3 PUSH2 0x1BA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x222 JUMPI PUSH2 0x221 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235 PUSH2 0x19C JUMP JUMPDEST SWAP1 POP PUSH2 0x241 DUP3 DUP3 PUSH2 0x1FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x261 JUMPI PUSH2 0x260 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST PUSH2 0x26A DUP3 PUSH2 0x1BA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299 PUSH2 0x294 DUP5 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B5 JUMPI PUSH2 0x2B4 PUSH2 0x1B5 JUMP JUMPDEST JUMPDEST PUSH2 0x2C0 DUP5 DUP3 DUP6 PUSH2 0x277 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0x1B0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30C JUMPI PUSH2 0x30B PUSH2 0x1A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x1AB JUMP JUMPDEST JUMPDEST PUSH2 0x336 DUP5 DUP3 DUP6 ADD PUSH2 0x2C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C5 DUP2 PUSH2 0x39F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x1A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EF DUP5 DUP3 DUP6 ADD PUSH2 0x3B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B DUP2 PUSH2 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x426 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x466 DUP3 PUSH2 0x33F JUMP JUMPDEST SWAP2 POP PUSH2 0x471 DUP4 PUSH2 0x33F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x498 JUMPI PUSH2 0x497 PUSH2 0x42C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D8 DUP3 PUSH2 0x33F JUMP JUMPDEST SWAP2 POP PUSH2 0x4E3 DUP4 PUSH2 0x33F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT AND DUP4 DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x50B JUMPI PUSH2 0x50A PUSH2 0x42C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C DUP3 PUSH2 0x33F JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x42C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xBFF752BFA21C 0xB9 PUSH1 0xC SWAP1 PUSH2 0xDBEF SIGNEXTEND PUSH28 0x5B811C969401E2F9BC37CA57546294CD64736F6C6343000812003300 ",
							"sourceMap": "57:1189:0:-:0;;;327:292;;;;;;;;;;416:1;396:12;:17;;;;;;;;;;;;;;;;:21;;;;447:1;427:12;:17;;;;;;;;;;;;;;;;:21;;;;478:2;458:12;:17;;;;;;;;;;;;;;;;:22;;;;510:2;490:12;:17;;;;;;;;;;;;;;;;:22;;;;542:3;522:12;:17;;;;;;;;;;;;;;;;:23;;;;575:3;555:12;:17;;;;;;;;;;;;;;;;:23;;;;608:4;588:12;:17;;;;;;;;;;;;;;;;:24;;;;57:1189;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@romanToIntWithMapping_126": {
									"entryPoint": 155,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@romanToValue_5": {
									"entryPoint": 388,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_bytes1": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes1": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_int256": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_bytes1": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6052:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1674:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1697:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1702:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1707:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1684:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1684:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1684:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1734:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1739:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1748:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1723:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1656:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1666:6:1",
														"type": ""
													}
												],
												"src": "1610:146:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1846:341:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1856:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1923:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1881:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1881:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1865:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1856:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1947:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1954:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1970:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1985:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1974:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2035:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2037:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2037:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2037:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2016:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2021:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2012:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2030:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2009:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:25:1"
															},
															"nodeType": "YulIf",
															"src": "2006:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2169:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2127:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1819:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1824:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1832:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1840:5:1",
														"type": ""
													}
												],
												"src": "1762:425:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2269:278:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2318:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2320:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2320:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2320:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2297:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2305:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2293:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2293:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2312:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:35:1"
															},
															"nodeType": "YulIf",
															"src": "2279:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2410:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2437:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2424:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2414:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2453:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2514:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2522:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2510:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2529:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2537:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2462:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:79:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2453:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2247:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2255:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2263:5:1",
														"type": ""
													}
												],
												"src": "2207:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:433:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2675:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2677:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2650:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2659:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2646:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2671:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2642:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:32:1"
															},
															"nodeType": "YulIf",
															"src": "2639:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2768:287:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2783:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2814:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2825:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2810:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2810:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2797:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2797:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2787:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2875:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2877:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2877:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2877:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2847:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2855:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2844:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2844:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2841:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2972:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3028:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3037:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2982:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2972:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2599:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2610:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2622:6:1",
														"type": ""
													}
												],
												"src": "2553:509:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3122:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3133:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3122:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3094:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3104:7:1",
														"type": ""
													}
												],
												"src": "3068:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3213:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3230:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3252:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "3235:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3235:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3223:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3201:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:1",
														"type": ""
													}
												],
												"src": "3150:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3367:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3377:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3389:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3400:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3385:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3377:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3455:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3468:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3479:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3464:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3413:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3413:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3339:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3351:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3362:4:1",
														"type": ""
													}
												],
												"src": "3271:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3539:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3549:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3564:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3571:66:1",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3560:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3560:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3549:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3521:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3531:7:1",
														"type": ""
													}
												],
												"src": "3495:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3692:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3750:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3750:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3715:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3739:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes1",
																					"nodeType": "YulIdentifier",
																					"src": "3722:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3722:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3712:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3712:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:42:1"
															},
															"nodeType": "YulIf",
															"src": "3702:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3685:5:1",
														"type": ""
													}
												],
												"src": "3650:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3827:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3837:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3859:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3846:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3846:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3837:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3901:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes1",
																	"nodeType": "YulIdentifier",
																	"src": "3875:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3875:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3875:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3805:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3813:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3821:5:1",
														"type": ""
													}
												],
												"src": "3776:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3984:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4030:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4032:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4032:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4032:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4005:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4014:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4001:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:32:1"
															},
															"nodeType": "YulIf",
															"src": "3994:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4123:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4138:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4152:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4142:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4167:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4201:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4212:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4197:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4197:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4221:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes1",
																			"nodeType": "YulIdentifier",
																			"src": "4177:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4177:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4167:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3954:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3965:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3977:6:1",
														"type": ""
													}
												],
												"src": "3919:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4297:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4307:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4318:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4307:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4279:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4289:7:1",
														"type": ""
													}
												],
												"src": "4252:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4400:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4417:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4440:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4422:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4422:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4410:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4410:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4410:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4388:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4395:3:1",
														"type": ""
													}
												],
												"src": "4335:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4557:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4567:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4579:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4575:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4567:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4647:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4660:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4671:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4656:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4656:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4603:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4603:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4603:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4529:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4541:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4552:4:1",
														"type": ""
													}
												],
												"src": "4459:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4715:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4735:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4725:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4829:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4832:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4822:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4822:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4853:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4856:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4846:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4687:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4917:328:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4927:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4949:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "4932:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4927:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4982:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "4965:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4960:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4993:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5005:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5008:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5001:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4993:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5216:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5218:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5218:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5218:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nodeType": "YulIdentifier",
																								"src": "5142:1:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5145:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "5138:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5138:9:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5131:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5131:17:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nodeType": "YulIdentifier",
																						"src": "5154:4:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5160:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "5150:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5150:12:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5127:36:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5185:1:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5188:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nodeType": "YulIdentifier",
																						"src": "5196:4:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5202:1:1"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "5192:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5192:12:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5177:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:28:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5111:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5111:104:1"
															},
															"nodeType": "YulIf",
															"src": "5108:130:1"
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4903:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4906:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4912:4:1",
														"type": ""
													}
												],
												"src": "4873:372:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5279:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5299:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5289:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5289:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5393:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5396:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5386:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5386:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5417:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5420:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5410:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5410:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5251:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5480:332:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5490:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5512:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "5495:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5495:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5490:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5523:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5545:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "5528:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5528:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5523:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5556:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5567:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5570:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5556:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5783:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5785:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5785:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5785:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5703:1:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5706:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "5699:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5699:9:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5692:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5692:17:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "sum",
																						"nodeType": "YulIdentifier",
																						"src": "5715:3:1"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5720:1:1"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "5711:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5711:11:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5688:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5745:1:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5748:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "5741:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5741:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "sum",
																								"nodeType": "YulIdentifier",
																								"src": "5763:3:1"
																							},
																							{
																								"name": "y",
																								"nodeType": "YulIdentifier",
																								"src": "5768:1:1"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nodeType": "YulIdentifier",
																							"src": "5759:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5759:11:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5752:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5752:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5737:35:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5672:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:110:1"
															},
															"nodeType": "YulIf",
															"src": "5669:136:1"
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5467:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5470:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5476:3:1",
														"type": ""
													}
												],
												"src": "5437:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5860:189:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5870:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5896:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "5879:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5879:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5870:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5992:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5994:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5994:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5994:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5917:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5924:66:1",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5914:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5914:77:1"
															},
															"nodeType": "YulIf",
															"src": "5911:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6023:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6034:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6041:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6023:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5846:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5856:3:1",
														"type": ""
													}
												],
												"src": "5818:231:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes1(value) {\n        if iszero(eq(value, cleanup_t_bytes1(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes1(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes1(value)\n    }\n\n    function abi_decode_tuple_t_bytes1(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes1(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        sum := add(x, y)\n\n        // overflow, if x >= 0 and sum < y\n        // underflow, if x < 0 and sum >= y\n        if or(\n            and(iszero(slt(x, 0)), slt(sum, y)),\n            and(slt(x, 0), iszero(slt(sum, y)))\n        ) { panic_error_0x11() }\n\n    }\n\n    function decrement_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063247b55421461003b578063669fb6321461006b575b600080fd5b610055600480360381019061005091906102f6565b61009b565b6040516100629190610358565b60405180910390f35b610085600480360381019061008091906103cb565b610184565b6040516100929190610411565b60405180910390f35b6000808290506000806000600184516100b4919061045b565b90505b600081126101785760008060008684815181106100d7576100d661049e565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000205490508281121561015257808461014b919061045b565b9350610161565b808461015e91906104cd565b93505b80925050808061017090610511565b9150506100b7565b50819350505050919050565b60006020528060005260406000206000915090505481565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610203826101ba565b810181811067ffffffffffffffff82111715610222576102216101cb565b5b80604052505050565b600061023561019c565b905061024182826101fa565b919050565b600067ffffffffffffffff821115610261576102606101cb565b5b61026a826101ba565b9050602081019050919050565b82818337600083830152505050565b600061029961029484610246565b61022b565b9050828152602081018484840111156102b5576102b46101b5565b5b6102c0848285610277565b509392505050565b600082601f8301126102dd576102dc6101b0565b5b81356102ed848260208601610286565b91505092915050565b60006020828403121561030c5761030b6101a6565b5b600082013567ffffffffffffffff81111561032a576103296101ab565b5b610336848285016102c8565b91505092915050565b6000819050919050565b6103528161033f565b82525050565b600060208201905061036d6000830184610349565b92915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6103a881610373565b81146103b357600080fd5b50565b6000813590506103c58161039f565b92915050565b6000602082840312156103e1576103e06101a6565b5b60006103ef848285016103b6565b91505092915050565b6000819050919050565b61040b816103f8565b82525050565b60006020820190506104266000830184610402565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104668261033f565b91506104718361033f565b92508282039050818112600084121682821360008512151617156104985761049761042c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006104d88261033f565b91506104e38361033f565b92508282019050828112156000831216838212600084121516171561050b5761050a61042c565b5b92915050565b600061051c8261033f565b91507f8000000000000000000000000000000000000000000000000000000000000000820361054e5761054d61042c565b5b60018203905091905056fea264697066735822122065bff752bfa21cb9600c9061dbef0b7b5b811c969401e2f9bc37ca57546294cd64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x247B5542 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x669FB632 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP5 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x45B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD7 JUMPI PUSH2 0xD6 PUSH2 0x49E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH2 0x152 JUMPI DUP1 DUP5 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x45B JUMP JUMPDEST SWAP4 POP PUSH2 0x161 JUMP JUMPDEST DUP1 DUP5 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x4CD JUMP JUMPDEST SWAP4 POP JUMPDEST DUP1 SWAP3 POP POP DUP1 DUP1 PUSH2 0x170 SWAP1 PUSH2 0x511 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x203 DUP3 PUSH2 0x1BA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x222 JUMPI PUSH2 0x221 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235 PUSH2 0x19C JUMP JUMPDEST SWAP1 POP PUSH2 0x241 DUP3 DUP3 PUSH2 0x1FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x261 JUMPI PUSH2 0x260 PUSH2 0x1CB JUMP JUMPDEST JUMPDEST PUSH2 0x26A DUP3 PUSH2 0x1BA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299 PUSH2 0x294 DUP5 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B5 JUMPI PUSH2 0x2B4 PUSH2 0x1B5 JUMP JUMPDEST JUMPDEST PUSH2 0x2C0 DUP5 DUP3 DUP6 PUSH2 0x277 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0x1B0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30C JUMPI PUSH2 0x30B PUSH2 0x1A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x1AB JUMP JUMPDEST JUMPDEST PUSH2 0x336 DUP5 DUP3 DUP6 ADD PUSH2 0x2C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x352 DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x349 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A8 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3C5 DUP2 PUSH2 0x39F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E1 JUMPI PUSH2 0x3E0 PUSH2 0x1A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EF DUP5 DUP3 DUP6 ADD PUSH2 0x3B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B DUP2 PUSH2 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x426 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x466 DUP3 PUSH2 0x33F JUMP JUMPDEST SWAP2 POP PUSH2 0x471 DUP4 PUSH2 0x33F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH1 0x0 DUP5 SLT AND DUP3 DUP3 SGT PUSH1 0x0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x498 JUMPI PUSH2 0x497 PUSH2 0x42C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D8 DUP3 PUSH2 0x33F JUMP JUMPDEST SWAP2 POP PUSH2 0x4E3 DUP4 PUSH2 0x33F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT AND DUP4 DUP3 SLT PUSH1 0x0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x50B JUMPI PUSH2 0x50A PUSH2 0x42C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51C DUP3 PUSH2 0x33F JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x42C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xBFF752BFA21C 0xB9 PUSH1 0xC SWAP1 PUSH2 0xDBEF SIGNEXTEND PUSH28 0x5B811C969401E2F9BC37CA57546294CD64736F6C6343000812003300 ",
							"sourceMap": "57:1189:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:615;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;273:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;629:615;698:3;713:23;745:1;713:34;;757:10;781:13;852:5;885:1;864:10;:17;860:26;;;;:::i;:::-;852:34;;847:359;893:1;888;:6;847:359;;915:16;938:12;:33;951:10;967:1;951:19;;;;;;;;:::i;:::-;;;;;;;;;;938:33;;;;;;;;;;;;;;;;;;915:57;;1018:9;1003:12;:24;999:146;;;1057:12;1047:22;;;;;:::i;:::-;;;999:146;;;1118:12;1108:22;;;;;:::i;:::-;;;999:146;1183:12;1171:24;;901:305;896:3;;;;;:::i;:::-;;;;847:359;;;;1231:6;1224:13;;;;;629:615;;;:::o;273:43::-;;;;;;;;;;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:146::-;1707:6;1702:3;1697;1684:30;1748:1;1739:6;1734:3;1730:16;1723:27;1610:146;;;:::o;1762:425::-;1840:5;1865:66;1881:49;1923:6;1881:49;:::i;:::-;1865:66;:::i;:::-;1856:75;;1954:6;1947:5;1940:21;1992:4;1985:5;1981:16;2030:3;2021:6;2016:3;2012:16;2009:25;2006:112;;;2037:79;;:::i;:::-;2006:112;2127:54;2174:6;2169:3;2164;2127:54;:::i;:::-;1846:341;1762:425;;;;;:::o;2207:340::-;2263:5;2312:3;2305:4;2297:6;2293:17;2289:27;2279:122;;2320:79;;:::i;:::-;2279:122;2437:6;2424:20;2462:79;2537:3;2529:6;2522:4;2514:6;2510:17;2462:79;:::i;:::-;2453:88;;2269:278;2207:340;;;;:::o;2553:509::-;2622:6;2671:2;2659:9;2650:7;2646:23;2642:32;2639:119;;;2677:79;;:::i;:::-;2639:119;2825:1;2814:9;2810:17;2797:31;2855:18;2847:6;2844:30;2841:117;;;2877:79;;:::i;:::-;2841:117;2982:63;3037:7;3028:6;3017:9;3013:22;2982:63;:::i;:::-;2972:73;;2768:287;2553:509;;;;:::o;3068:76::-;3104:7;3133:5;3122:16;;3068:76;;;:::o;3150:115::-;3235:23;3252:5;3235:23;:::i;:::-;3230:3;3223:36;3150:115;;:::o;3271:218::-;3362:4;3400:2;3389:9;3385:18;3377:26;;3413:69;3479:1;3468:9;3464:17;3455:6;3413:69;:::i;:::-;3271:218;;;;:::o;3495:149::-;3531:7;3571:66;3564:5;3560:78;3549:89;;3495:149;;;:::o;3650:120::-;3722:23;3739:5;3722:23;:::i;:::-;3715:5;3712:34;3702:62;;3760:1;3757;3750:12;3702:62;3650:120;:::o;3776:137::-;3821:5;3859:6;3846:20;3837:29;;3875:32;3901:5;3875:32;:::i;:::-;3776:137;;;;:::o;3919:327::-;3977:6;4026:2;4014:9;4005:7;4001:23;3997:32;3994:119;;;4032:79;;:::i;:::-;3994:119;4152:1;4177:52;4221:7;4212:6;4201:9;4197:22;4177:52;:::i;:::-;4167:62;;4123:116;3919:327;;;;:::o;4252:77::-;4289:7;4318:5;4307:16;;4252:77;;;:::o;4335:118::-;4422:24;4440:5;4422:24;:::i;:::-;4417:3;4410:37;4335:118;;:::o;4459:222::-;4552:4;4590:2;4579:9;4575:18;4567:26;;4603:71;4671:1;4660:9;4656:17;4647:6;4603:71;:::i;:::-;4459:222;;;;:::o;4687:180::-;4735:77;4732:1;4725:88;4832:4;4829:1;4822:15;4856:4;4853:1;4846:15;4873:372;4912:4;4932:19;4949:1;4932:19;:::i;:::-;4927:24;;4965:19;4982:1;4965:19;:::i;:::-;4960:24;;5008:1;5005;5001:9;4993:17;;5202:1;5196:4;5192:12;5188:1;5185;5181:9;5177:28;5160:1;5154:4;5150:12;5145:1;5142;5138:9;5131:17;5127:36;5111:104;5108:130;;;5218:18;;:::i;:::-;5108:130;4873:372;;;;:::o;5251:180::-;5299:77;5296:1;5289:88;5396:4;5393:1;5386:15;5420:4;5417:1;5410:15;5437:375;5476:3;5495:19;5512:1;5495:19;:::i;:::-;5490:24;;5528:19;5545:1;5528:19;:::i;:::-;5523:24;;5570:1;5567;5563:9;5556:16;;5768:1;5763:3;5759:11;5752:19;5748:1;5745;5741:9;5737:35;5720:1;5715:3;5711:11;5706:1;5703;5699:9;5692:17;5688:35;5672:110;5669:136;;;5785:18;;:::i;:::-;5669:136;5437:375;;;;:::o;5818:231::-;5856:3;5879:23;5896:5;5879:23;:::i;:::-;5870:32;;5924:66;5917:5;5914:77;5911:103;;5994:18;;:::i;:::-;5911:103;6041:1;6034:5;6030:13;6023:20;;5818:231;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "284600",
								"executionCost": "155731",
								"totalCost": "440331"
							},
							"external": {
								"romanToIntWithMapping(string)": "infinite",
								"romanToValue(bytes1)": "2771"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1246,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 327,
									"end": 619,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 327,
									"end": 619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 327,
									"end": 619,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 327,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 619,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 327,
									"end": 619,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 619,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 327,
									"end": 619,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 327,
									"end": 619,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 619,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 327,
									"end": 619,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 416,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 396,
									"end": 408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "4900000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 396,
									"end": 413,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 413,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 396,
									"end": 417,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 396,
									"end": 417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 396,
									"end": 417,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 396,
									"end": 417,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 447,
									"end": 448,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 427,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 444,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "PUSH",
									"source": 0,
									"value": "5600000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 427,
									"end": 444,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 427,
									"end": 444,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 427,
									"end": 444,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 427,
									"end": 444,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 427,
									"end": 444,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 444,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 427,
									"end": 448,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 427,
									"end": 448,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 427,
									"end": 448,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 448,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 478,
									"end": 480,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 458,
									"end": 470,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 475,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "PUSH",
									"source": 0,
									"value": "5800000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 458,
									"end": 475,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 458,
									"end": 475,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 458,
									"end": 475,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 458,
									"end": 475,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 458,
									"end": 475,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 475,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 458,
									"end": 480,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 458,
									"end": 480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 458,
									"end": 480,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 458,
									"end": 480,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 510,
									"end": 512,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 490,
									"end": 502,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 507,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "PUSH",
									"source": 0,
									"value": "4C00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 507,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 490,
									"end": 507,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 490,
									"end": 507,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 490,
									"end": 507,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 490,
									"end": 507,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 507,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 490,
									"end": 512,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 490,
									"end": 512,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 490,
									"end": 512,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 490,
									"end": 512,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 542,
									"end": 545,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 539,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "PUSH",
									"source": 0,
									"value": "4300000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 522,
									"end": 539,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 522,
									"end": 539,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 522,
									"end": 539,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 522,
									"end": 539,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 522,
									"end": 539,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 539,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 522,
									"end": 545,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 522,
									"end": 545,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 522,
									"end": 545,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 522,
									"end": 545,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 575,
									"end": 578,
									"name": "PUSH",
									"source": 0,
									"value": "1F4"
								},
								{
									"begin": 555,
									"end": 567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 572,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "4400000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 555,
									"end": 572,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 572,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 572,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 555,
									"end": 572,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 572,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 555,
									"end": 578,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 555,
									"end": 578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 555,
									"end": 578,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 555,
									"end": 578,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 608,
									"end": 612,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 588,
									"end": 600,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 588,
									"end": 605,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "4D00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 588,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 588,
									"end": 605,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 588,
									"end": 605,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 588,
									"end": 605,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 588,
									"end": 605,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 588,
									"end": 605,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 588,
									"end": 612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 588,
									"end": 612,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 588,
									"end": 612,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 588,
									"end": 612,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1246,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065bff752bfa21cb9600c9061dbef0b7b5b811c969401e2f9bc37ca57546294cd64736f6c63430008120033",
									".code": [
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "247B5542"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "669FB632"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 629,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 629,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 629,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 273,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 273,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 273,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 713,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 713,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 886,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 864,
											"end": 874,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 864,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 860,
											"end": 886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 860,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 886,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 860,
											"end": 886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 852,
											"end": 886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 894,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 915,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 961,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 951,
											"end": 970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 951,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 951,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 951,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 951,
											"end": 970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 951,
											"end": 970,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 951,
											"end": 970,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 951,
											"end": 970,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 971,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 971,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 971,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 938,
											"end": 971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 915,
											"end": 972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1027,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1047,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1118,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1108,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 999,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1183,
											"end": 1195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 1206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 896,
											"end": 899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 896,
											"end": 899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 896,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 896,
											"end": 899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 896,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 896,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 896,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 896,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 896,
											"end": 899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 896,
											"end": 899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 896,
											"end": 899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 847,
											"end": 1206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1237,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 1244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 580,
											"end": 682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 957,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1098,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 1155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1222,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1470,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1508,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1697,
											"end": 1700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1714,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1881,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1881,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1865,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1865,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 1996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 1997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2034,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2037,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2037,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2006,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2127,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2127,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2309,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2316,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2320,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2320,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2279,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2444,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2514,
											"end": 2520,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2462,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 3062,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2553,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2657,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2674,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2639,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2677,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2677,
											"end": 2756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2756,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2677,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2639,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2828,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2847,
											"end": 2853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2874,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2841,
											"end": 2958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2877,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2958,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2841,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3037,
											"end": 3044,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3026,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2982,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3045,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2982,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 3055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 3062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 3062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 3062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 3062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3144,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3068,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3150,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3252,
											"end": 3257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3235,
											"end": 3258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3258,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3235,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3223,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3489,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3271,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3479,
											"end": 3480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3461,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3413,
											"end": 3482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3413,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3495,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3637,
											"name": "PUSH",
											"source": 1,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3564,
											"end": 3569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3638,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3770,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3650,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3739,
											"end": 3744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3722,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3722,
											"end": 3745,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3722,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3746,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3702,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3702,
											"end": 3764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3702,
											"end": 3764,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3702,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3913,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3776,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3866,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3901,
											"end": 3906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3875,
											"end": 3907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4246,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3919,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4028,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4014,
											"end": 4023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4012,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4024,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4029,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4113,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3994,
											"end": 4113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4032,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4032,
											"end": 4111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4111,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4032,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4113,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3994,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4221,
											"end": 4228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4177,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4229,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4177,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4123,
											"end": 4239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4246,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4329,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4252,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4453,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4335,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4422,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4422,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4681,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4459,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4671,
											"end": 4672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4653,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4603,
											"end": 4674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4674,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4603,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4687,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4812,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4829,
											"end": 4830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4822,
											"end": 4837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4860,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4861,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 5245,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4873,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4932,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 4951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4982,
											"end": 4983,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4965,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4965,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4984,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5204,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5186,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5190,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 5145,
											"end": 5146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5147,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5148,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5215,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5238,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5108,
											"end": 5238,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5218,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5238,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5108,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 5245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 5245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 5245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 5245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5251,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5296,
											"end": 5297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5425,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5812,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5437,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5495,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5514,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5495,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5528,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5528,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5547,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5563,
											"end": 5572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5759,
											"end": 5770,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5745,
											"end": 5746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5772,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5722,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5708,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5709,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5723,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5782,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5805,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5669,
											"end": 5805,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5785,
											"end": 5803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5805,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5669,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6049,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5818,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5896,
											"end": 5901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5879,
											"end": 5902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5902,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5879,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 5990,
											"name": "PUSH",
											"source": 1,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5917,
											"end": 5922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5914,
											"end": 5991,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5911,
											"end": 6014,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5994,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 6014,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5911,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6041,
											"end": 6042,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6034,
											"end": 6039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5818,
											"end": 6049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"solidity入门练习/3_ RomanToInteger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"romanToIntWithMapping(string)": "247b5542",
							"romanToValue(bytes1)": "669fb632"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"romanToIntWithMapping\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"name\":\"romanToValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity\\u5165\\u95e8\\u7ec3\\u4e60/3_ RomanToInteger.sol\":\"RomanMappingExplanation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"solidity\\u5165\\u95e8\\u7ec3\\u4e60/3_ RomanToInteger.sol\":{\"keccak256\":\"0x781c2ba56490039ade2ee498b63d39d96527ed36f5c82da94d6229f10db93999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efe92b13fc1abb02ebb37e03c0c3dab7caf426b6dd2dec6466cff01e3c5b1957\",\"dweb:/ipfs/QmYuHkVZUm6m33Z9sm9oqqE7NrQgm9abivi4PzRDvPHgF1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "solidity入门练习/3_ RomanToInteger.sol:RomanMappingExplanation",
								"label": "romanToValue",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes1,t_uint256)"
							}
						],
						"types": {
							"t_bytes1": {
								"encoding": "inplace",
								"label": "bytes1",
								"numberOfBytes": "1"
							},
							"t_mapping(t_bytes1,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes1",
								"label": "mapping(bytes1 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"solidity入门练习/3_ RomanToInteger.sol": {
				"ast": {
					"absolutePath": "solidity入门练习/3_ RomanToInteger.sol",
					"exportedSymbols": {
						"RomanMappingExplanation": [
							127
						]
					},
					"id": 128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RomanMappingExplanation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "RomanMappingExplanation",
							"nameLocation": "66:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "669fb632",
									"id": 5,
									"mutability": "mutable",
									"name": "romanToValue",
									"nameLocation": "304:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "273:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
										"typeString": "mapping(bytes1 => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "bytes1",
											"nodeType": "ElementaryTypeName",
											"src": "281:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes1",
												"typeString": "bytes1"
											}
										},
										"nodeType": "Mapping",
										"src": "273:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
											"typeString": "mapping(bytes1 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "291:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "341:278:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 8,
															"name": "romanToValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "396:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 10,
														"indexExpression": {
															"hexValue": "49",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "409:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															},
															"value": "I"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "396:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "416:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "396:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "396:21:0"
											},
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 14,
															"name": "romanToValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "427:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 16,
														"indexExpression": {
															"hexValue": "56",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "440:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0da850a6b7c61a66cdd43ac7529affc6000442af1c1bdda1db3bb7220bf7613",
																"typeString": "literal_string \"V\""
															},
															"value": "V"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "427:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35",
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "427:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "427:21:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 20,
															"name": "romanToValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "458:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 22,
														"indexExpression": {
															"hexValue": "58",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "471:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
																"typeString": "literal_string \"X\""
															},
															"value": "X"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "458:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "478:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "458:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "458:22:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 26,
															"name": "romanToValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "490:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 28,
														"indexExpression": {
															"hexValue": "4c",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "503:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aa64f937099b65a4febc243a5ae0f2d6416bb9e473c30dd29c1ee498fb7c5a8",
																"typeString": "literal_string \"L\""
															},
															"value": "L"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "490:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3530",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "510:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "490:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "490:22:0"
											},
											{
												"expression": {
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 32,
															"name": "romanToValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "522:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 34,
														"indexExpression": {
															"hexValue": "43",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "535:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
																"typeString": "literal_string \"C\""
															},
															"value": "C"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "522:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "542:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "522:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "522:23:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 38,
															"name": "romanToValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "555:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 40,
														"indexExpression": {
															"hexValue": "44",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "568:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
																"typeString": "literal_string \"D\""
															},
															"value": "D"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "555:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "575:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"src": "555:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "555:23:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 44,
															"name": "romanToValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "588:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 46,
														"indexExpression": {
															"hexValue": "4d",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "601:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d61fdc86cb928ea48fbf22d28ed5341c2e6a2599c550270b824b71dfa078d06",
																"typeString": "literal_string \"M\""
															},
															"value": "M"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "588:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "608:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "588:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "588:24:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:0:0"
									},
									"scope": 127,
									"src": "327:292:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "703:541:0",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "romanBytes",
														"nameLocation": "726:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "713:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 58,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": {
													"arguments": [
														{
															"id": 62,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "745:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "739:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 60,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "739:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "739:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "713:34:0"
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "761:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "757:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 65,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "757:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"hexValue": "30",
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "770:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "757:14:0"
											},
											{
												"assignments": [
													70
												],
												"declarations": [
													{
														"constant": false,
														"id": 70,
														"mutability": "mutable",
														"name": "prevValue",
														"nameLocation": "785:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "781:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 69,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "781:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"hexValue": "30",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "797:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "781:17:0"
											},
											{
												"body": {
													"id": 121,
													"nodeType": "Block",
													"src": "901:305:0",
													"statements": [
														{
															"assignments": [
																90
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 90,
																	"mutability": "mutable",
																	"name": "currentValue",
																	"nameLocation": "919:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 121,
																	"src": "915:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 89,
																		"name": "int",
																		"nodeType": "ElementaryTypeName",
																		"src": "915:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 102,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 93,
																			"name": "romanToValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "938:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																				"typeString": "mapping(bytes1 => uint256)"
																			}
																		},
																		"id": 100,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 94,
																				"name": "romanBytes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 59,
																				"src": "951:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 99,
																			"indexExpression": {
																				"arguments": [
																					{
																						"id": 97,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 74,
																						"src": "967:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 96,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "962:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 95,
																						"name": "uint",
																						"nodeType": "ElementaryTypeName",
																						"src": "962:4:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 98,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "962:7:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "951:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "938:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "934:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 91,
																		"name": "int",
																		"nodeType": "ElementaryTypeName",
																		"src": "934:3:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "934:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "915:57:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 103,
																	"name": "currentValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "1003:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 104,
																	"name": "prevValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1018:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1003:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 115,
																"nodeType": "Block",
																"src": "1090:55:0",
																"statements": [
																	{
																		"expression": {
																			"id": 113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 111,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 66,
																				"src": "1108:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 112,
																				"name": "currentValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 90,
																				"src": "1118:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1108:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 114,
																		"nodeType": "ExpressionStatement",
																		"src": "1108:22:0"
																	}
																]
															},
															"id": 116,
															"nodeType": "IfStatement",
															"src": "999:146:0",
															"trueBody": {
																"id": 110,
																"nodeType": "Block",
																"src": "1029:55:0",
																"statements": [
																	{
																		"expression": {
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 106,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 66,
																				"src": "1047:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 107,
																				"name": "currentValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 90,
																				"src": "1057:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1047:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 109,
																		"nodeType": "ExpressionStatement",
																		"src": "1047:22:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 117,
																	"name": "prevValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1171:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 118,
																	"name": "currentValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "1183:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1171:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 120,
															"nodeType": "ExpressionStatement",
															"src": "1171:24:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "888:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "893:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 122,
												"initializationExpression": {
													"assignments": [
														74
													],
													"declarations": [
														{
															"constant": false,
															"id": 74,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "856:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 122,
															"src": "852:5:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"typeName": {
																"id": 73,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "852:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 82,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 77,
																		"name": "romanBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 59,
																		"src": "864:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "875:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "864:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "860:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 75,
																	"name": "int",
																	"nodeType": "ElementaryTypeName",
																	"src": "860:3:0",
																	"typeDescriptions": {}
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "860:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "885:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "860:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "852:34:0"
												},
												"loopExpression": {
													"expression": {
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "896:3:0",
														"subExpression": {
															"id": 86,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "896:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 88,
													"nodeType": "ExpressionStatement",
													"src": "896:3:0"
												},
												"nodeType": "ForStatement",
												"src": "847:359:0"
											},
											{
												"expression": {
													"id": 123,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 66,
													"src": "1231:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 57,
												"id": 124,
												"nodeType": "Return",
												"src": "1224:13:0"
											}
										]
									},
									"functionSelector": "247b5542",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "romanToIntWithMapping",
									"nameLocation": "638:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "674:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "660:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 52,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "660:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:17:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "698:3:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 55,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "698:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:5:0"
									},
									"scope": 127,
									"src": "629:615:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 128,
							"src": "57:1189:0",
							"usedErrors": []
						}
					],
					"src": "32:1214:0"
				},
				"id": 0
			}
		}
	}
}