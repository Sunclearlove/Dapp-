{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Transfer(address,address,uint256)": {
					"notice": "3. 日志系统，记录转账行为。*"
				}
			},
			"kind": "user",
			"methods": {
				"approve(address,uint256)": {
					"notice": "4 添加授权函数 msg.sender 是授权人； spender 是被授权人； 我们在 allowance[授权人][被授权人] 上记录额度； emit Approval(...) 是记录日志。*"
				},
				"balanceOf(address)": {
					"notice": "2. 添加账户余额与授权数据结构 balanceOf[地址]：存储每个用户的代币余额； 写 public 会自动生成一个可查看余额的函数。 allowance[授权人][被授权人]：被授权人可扣款额度。*"
				},
				"mint(address,uint256)": {
					"notice": "6 mint是干嘛的 你现在的代币合约，大家能转账、授权、代扣，但没人能“制造”新的币。 现在我们要给管理员（owner）加一个功能： 能够向某个地址发放任意数量的新币，并更新总发行量（totalSupply）。 1 只有 owner（管理员）能执行 2 balanceOf[to] += amount 给目标地址加币 3 totalSupply += amount 更新总发行量 4 emit Transfer(address(0), to, amount) 是 ERC20 标准写法，表示是“增发新币”（从 0 地址转出来）*"
				},
				"transfer(address,uint256)": {
					"notice": "4. 实现transfer函数(基础转账) .谁调用函数，msg.sender表示是谁的 .需要先检查他有没有充足的余额 .从他账上扣掉aomout .给收款人账上加上amount .发一个日志事件； .返回true表示成功*"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "5 添加transferFrom（代扣转账） msg.sender 是要代扣的人（比如商城）； from 是授权人（比如自己）*"
				}
			},
			"notice": "任务：参考 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol实现一个简单的 ERC20 代币合约。要求： 合约包含以下标准 ERC20 功能： balanceOf：查询账户余额。 transfer：转账。 approve 和 transferFrom：授权和代扣转账。 使用 event 记录转账和授权操作。 提供 mint 函数，允许合约所有者增发代币。 提示： 使用 mapping 存储账户余额和授权信息。 使用 event 定义 Transfer 和 Approval 事件。 部署到sepolia 测试网，导入到自己的钱包*",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"solidity进阶/1_HomeWorkMyERC20.sol": "MyERC20"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"solidity进阶/1_HomeWorkMyERC20.sol": {
			"keccak256": "0x4f9654b3282eb7937ebfb7a4506b6104bb85bbba9fa099a8877a3d5537597449",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://99216e73b5a82e4edb3826f2af5312ac250e4b1b2936ddd3c72d4b0fbf68a7fa",
				"dweb:/ipfs/QmVzTGSPwF7SaDHoo9nfw7JNGrpe86h7jBrWVehFvThxLu"
			]
		}
	},
	"version": 1
}